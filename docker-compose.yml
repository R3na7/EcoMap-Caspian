services:
  postgres:
    image: postgis/postgis:15-3.4
    container_name: caspian_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: caspian_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: caspian_app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    environment:
      POSTGRES_HOST: postgres
      REDIS_HOST: redis
    env_file:
      - .env
    volumes:
      - ./app:/app/app
      - ./alembic:/app/alembic
      - uploads_data:/app/static/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Optional: MinIO для S3-совместимого хранилища
  # minio:
  #   image: minio/minio:latest
  #   container_name: caspian_minio
  #   command: server /data --console-address ":9001"
  #   ports:
  #     - "9000:9000"
  #     - "9001:9001"
  #   environment:
  #     MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
  #     MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
  #   volumes:
  #     - minio_data:/data

volumes:
  postgres_data:
  redis_data:
  uploads_data:
  # minio_data:
